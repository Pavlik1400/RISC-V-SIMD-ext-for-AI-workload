import matplotlib.pyplot as plt
import numpy as np

data = {
    # "ORIGINAL": [
    #     406868334,
    #     406834202,
    #     406864454,
    #     406844009,
    #     406855054,
    #     406822341,
    #     406850857,
    #     406852222,
    #     406856174,
    #     406855463,
    #     406853331,
    # ],
    # "SIMPLIFIED": [
    #     299648785,
    #     299621112,
    #     299645610,
    #     299628720,
    #     299637320,
    #     299611894,
    #     299636333,
    #     299634728,
    #     299637876,
    #     299637777,
    #     299638030,
    # ],
    "V1.0": [
        10415139,
        10387466,
        10411964,
        10395074,
        10403674,
        10378248,
        10402687,
        10401082,
        10404230,
        10404131,
        10404384,
    ],
    "V2.0": [
        33483262,
        33449130,
        33479382,
        33458937,
        33469982,
        33437269,
        33465785,
        33467150,
        33471102,
        33470391,
        33468259,
    ],
    "V3.0": [
        59497356,
        59463224,
        59493760,
        59473031,
        59484076,
        59451363,
        59479879,
        59481244,
        59485196,
        59484485,
        59482353,
    ],
    # "V4.0\nFirst Synthesizable": [
    "V4.0": [
        49810757,
        49778778,
        49807112,
        49787852,
        49798082,
        49767798,
        49794955,
        49795330,
        49799014,
        49798507,
        49797170,
    ],
    "V5.0": [
        44552519,
        44543851,
        44551391,
        44545105,
        44546408,
        44542596,
        44555114,
        44544288,
        44545191,
        44546846,
        44554357,
    ],
    "V5.1": [
        45154631,
        45145963,
        45153503,
        45147217,
        45148520,
        45144708,
        45157226,
        45146400,
        45147303,
        45148958,
        45156469,
    ],
    "V6.0": [
        28805282,
        28796614,
        28804154,
        28797868,
        28799171,
        28795359,
        28807877,
        28797051,
        28797954,
        28799609,
        28807120,
    ],
    # "V6.0": [         // Doesn't use quant v2
    #     28203170,
    #     28194502,
    #     28202042,
    #     28195756,
    #     28197059,
    #     28193247,
    #     28205765,
    #     28194939,
    #     28195842,
    #     28197497,
    #     28205008,
    # ],
    "V6.1": [
        29200999,
        29192343,
        29199887,
        29193620,
        29194879,
        29191076,
        29203605,
        29192772,
        29193670,
        29195334,
        29202857,
    ],
    # "V7.0": [         // Doesn't use quant_2 and uses conditional write size
    #     26463890,
    #     26455222,
    #     26462762,
    #     26456476,
    #     26457779,
    #     26453967,
    #     26466485,
    #     26455659,
    #     26456562,
    #     26458217,
    #     26465728,
    # ],
    "V7.0": [
        27624493,
        27615837,
        27623381,
        27617114,
        27618373,
        27614570,
        27627099,
        27616266,
        27617164,
        27618828,
        27626351,
    ],
    "V8.0": [
        28745877,
        28737209,
        28744749,
        28738463,
        28739766,
        28735954,
        28748472,
        28737646,
        28738549,
        28740204,
        28747715,
    ],
    # "v8.0_x1": [138840456],
    # "v8.0_x2": [75927431],
    # "v8.0_x4": [44474325],
    # "v8.0_x8": [28745877],
    "v8.0_x16": [20881941],
    "v8.0_x24": [18335081],
    "v8.0_x32": [16950459],
}


def main():
    meaned_data = {}
    for k, cycles in data.items():
        meaned_data[k] = np.mean(cycles)

    versions = list(meaned_data.keys())
    cycles = list(meaned_data.values())

    fig, ax = plt.subplots()

    # creating the bar plot
    bars = plt.bar(versions, cycles, color="#63A8D3", width=0.8)

    ax.spines["top"].set_visible(False)
    ax.spines["right"].set_visible(False)
    ax.spines["left"].set_visible(False)
    ax.spines["bottom"].set_color("#DDDDDD")

    # ax.tick_params(bottom=False, left=False)

    ax.set_axisbelow(True)
    ax.yaxis.grid(True, color="#DDDDDD")
    ax.xaxis.grid(False)

    plt.xlabel("Implementation versions")
    plt.ylabel("Cycles")
    plt.title("CNN1:generated_0-30 inference acceleration (clock cycles)")

    bar_color = bars[0].get_facecolor()
    for bar in bars:
        ax.text(
            bar.get_x() + bar.get_width() / 2,
            bar.get_height() + 1e6,
            "%.1fM" % (bar.get_height() / 1e6),
            horizontalalignment="center",
            color=bar_color,
            weight="bold",
        )

    plt.show()


if __name__ == "__main__":
    main()
